<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApiService.BulkDelete.Error" xml:space="preserve">
    <value>The list of records could not be deleted</value>
  </data>
  <data name="ApiService.BulkDelete.Success" xml:space="preserve">
    <value>The list of records was successfully deleted!</value>
  </data>
  <data name="ApiService.BulkInsert.Error" xml:space="preserve">
    <value>The list of records could not be inserted</value>
  </data>
  <data name="ApiService.BulkInsert.Success" xml:space="preserve">
    <value>The list of records was successfully inserted!</value>
  </data>
  <data name="ApiService.BulkUpdate.Error" xml:space="preserve">
    <value>The list of records could not be updated</value>
  </data>
  <data name="ApiService.BulkUpdate.Success" xml:space="preserve">
    <value>The list of records was successfully updated!</value>
  </data>
  <data name="ApiService.Delete.Error" xml:space="preserve">
    <value>The record could not be deleted</value>
  </data>
  <data name="ApiService.Delete.Success" xml:space="preserve">
    <value>The record was successfully deleted!</value>
  </data>
  <data name="ApiService.Insert.Error" xml:space="preserve">
    <value>The record could not be inserted</value>
  </data>
  <data name="ApiService.Insert.Success" xml:space="preserve">
    <value>The record was successfully inserted!</value>
  </data>
  <data name="ApiService.Read.Error" xml:space="preserve">
    <value>The data could not be retrieved</value>
  </data>
  <data name="ApiService.Update.Error" xml:space="preserve">
    <value>The record could not be updated</value>
  </data>
  <data name="ApiService.Update.Success" xml:space="preserve">
    <value>The record was successfully updated!</value>
  </data>
  <data name="MasterDataService.BlockItem.InvalidMasterDataId" xml:space="preserve">
    <value>The item could no be blocked. 'MasterDataId' with value '{0}' does not exist</value>
  </data>
  <data name="MasterDataService.InsertItem.DuplicatedCode" xml:space="preserve">
    <value>The item could not be inserted. 'Code' with value '{0}' already exists</value>
  </data>
  <data name="MasterDataService.InsertItem.DuplicatedDescription" xml:space="preserve">
    <value>The item could not be inserted. 'Description' with value '{0}' already exists</value>
  </data>
  <data name="MasterDataService.InsertItem.DuplicatedId" xml:space="preserve">
    <value>The item could not be inserted. 'Id' with value '{0}' already exists</value>
  </data>
  <data name="MasterDataService.InsertItem.InvalidParentMasterDataId" xml:space="preserve">
    <value>The item could not be inserted. 'ParentMasterDataId' with value '{0}' does not exist</value>
  </data>
  <data name="MasterDataService.InsertItem.MissingId" xml:space="preserve">
    <value>The item could not be inserted. 'Id' is required</value>
  </data>
  <data name="MasterDataService.InsertItem.UnnecessaryId" xml:space="preserve">
    <value>The item could not be inserted. 'Id' is auto-generated, should not be provided, send null</value>
  </data>
  <data name="MasterDataService.DeleteItem.InvalidMasterDataId" xml:space="preserve">
    <value>The item could not be deleted. 'MasterDataId' with value '{0}' does not exist</value>
  </data>
  <data name="MasterDataService.UnblockItem.InvalidMasterDataId" xml:space="preserve">
    <value>The item could not be unblocked. 'MasterDataId' with value '{0}' does not exist</value>
  </data>
  <data name="MasterDataService.UpdateItem.DuplicatedCode" xml:space="preserve">
    <value>The item could not be updated. 'Code' with value '{0}' already exists</value>
  </data>
  <data name="MasterDataService.UpdateItem.DuplicatedDescription" xml:space="preserve">
    <value>The item could not be updated. 'Description' with value '{0}' already exists</value>
  </data>
  <data name="MasterDataService.UpdateItem.DuplicatedId" xml:space="preserve">
    <value>The item could not be updated. 'Id' with value '{0}' already exists</value>
  </data>
  <data name="MasterDataService.UpdateItem.InvalidMasterDataId" xml:space="preserve">
    <value>The item could not be updated. 'MasterDataId' with value '{0}' does not exist</value>
  </data>
  <data name="LogService.SearchLogValidator.InvalidLevel" xml:space="preserve">
    <value>Invalid 'Level' filter. Specify one of the following: 'Debug', 'Info', 'Warn', 'Error' </value>
  </data>
  <data name="SettingService.GetByCategory.InvalidCategory" xml:space="preserve">
    <value>'Category' with value '{0}' does not exist</value>
  </data>
  <data name="SettingService.GetByCategoryAndKey.InvalidKategoryKey" xml:space="preserve">
    <value>'Category' and 'Key' with value '{0}' - '{1}' does not exist</value>
  </data>
  <data name="SettingService.GetById.InvalidSettingId" xml:space="preserve">
    <value>'SettingId' with value '{0}' does not exist</value>
  </data>
  <data name="SettingService.Update.InvalidCategoryKey" xml:space="preserve">
    <value>The setting could not be updated. 'Category' and 'Key' are invalid: '{0}' - '{1}'</value>
  </data>
  <data name="SettingService.UpdateById.InvalidId" xml:space="preserve">
    <value>The setting could not be updated. 'SettingId' is invalid: '{0}'</value>
  </data>
  <data name="SettingService.UpdateSeveral.InvalidCategoryKey" xml:space="preserve">
    <value>The list of settings could not be updated. Some 'Category' and 'Key' are invalid</value>
  </data>
  <data name="SettingService.UpdateSeveral.InvalidId" xml:space="preserve">
    <value>The list of settings could not be updated. Some 'SettingId' are invalid</value>
  </data>
  <data name="SettingService.Update.UnallowedUpdate" xml:space="preserve">
    <value>It is not allowed updating this setting</value>
  </data>
  <data name="SettingService.Update.UnauthorizedUpdate" xml:space="preserve">
    <value>You are not authorized to update this setting</value>
  </data>
  <data name="SettingService.Validation.Date" xml:space="preserve">
    <value>Setting '{0}' is invalid. Invalid date format</value>
  </data>
  <data name="SettingService.Validation.Decimals" xml:space="preserve">
    <value>Setting '{0}' is invalid. Max '{1}' decimals allowed, received: '{2}'</value>
  </data>
  <data name="SettingService.Validation.Double" xml:space="preserve">
    <value>Setting '{0}' is invalid. Expecting a float number</value>
  </data>
  <data name="SettingService.Validation.Email" xml:space="preserve">
    <value>Setting '{0}' is invalid. Invalid email format</value>
  </data>
  <data name="SettingService.Validation.Integer" xml:space="preserve">
    <value>Setting '{0}' is invalid. Expecting an integer number</value>
  </data>
  <data name="SettingService.Validation.Max" xml:space="preserve">
    <value>Setting '{0}' is invalid. Value should be less or equal than '{1}'</value>
  </data>
  <data name="SettingService.Validation.Min" xml:space="preserve">
    <value>Setting '{0}' is invalid. Value should be greater or equal than '{1}'</value>
  </data>
  <data name="SettingService.Validation.Name" xml:space="preserve">
    <value>Setting '{0}' is invalid. Only letters and spaces are allowed</value>
  </data>
  <data name="SettingService.Validation.Phone" xml:space="preserve">
    <value>Setting '{0}' is invalid. Expecting a phone with format: '{1}'</value>
  </data>
  <data name="SettingService.Validation.Regex" xml:space="preserve">
    <value>Setting '{0}' is invalid. Expression should follow this format: '{1}'</value>
  </data>
  <data name="SettingService.Validation.Required" xml:space="preserve">
    <value>Setting '{0}' is invalid. Value is required</value>
  </data>
  <data name="SettingService.Validation.UnallowedValue" xml:space="preserve">
    <value>Setting '{0}' is invalid. '{1}' is not allowed. Only the following values are allowed: '{2}'</value>
  </data>
  <data name="SettingService.Validation.Zip" xml:space="preserve">
    <value>Setting '{0}' is invalid. Expected a valid Zip number</value>
  </data>
  <data name="SecurityService.Login.InvalidCredentials" xml:space="preserve">
    <value>User email or password are invalid!</value>
  </data>
  <data name="SecurityService.UpdateMyLanguage.Unauthorized" xml:space="preserve">
    <value>You are not authorized to update the language</value>
  </data>
  <data name="SecurityService.UpdateMyLanguage.InvalidLanguage" xml:space="preserve">
    <value>The language could not be updated. 'LanguageCode' is not supported: '{0}'</value>
  </data>
  <data name="SecurityService.UpdateMyLanguage.NothingToUpdate" xml:space="preserve">
    <value>There is nothing to update. The new language is the same as the old one</value>
  </data>
  <data name="MasterDataService.UpdateItem.UnnecessaryId" xml:space="preserve">
    <value>The item could not be updated. 'Id' is auto-generated, should not be provided, send null</value>
  </data>
  <data name="MasterDataService.UpdateItem.InvalidOrder" xml:space="preserve">
    <value>The item could not be updated. 'Order' should be between '1' and '{0}'</value>
  </data>
  <data name="MasterDataService.DeleteItem.ItemWithChildren" xml:space="preserve">
    <value>This item has children and can not be deleted</value>
  </data>
  <data name="MasterDataService.InsertItem.UnallowedInsert" xml:space="preserve">
    <value>It is not allowed inserting children to this item</value>
  </data>
  <data name="MasterDataService.InsertItem.UnauthorizedInsertOnParent" xml:space="preserve">
    <value>You are not authorized to insert children to this item</value>
  </data>
  <data name="MasterDataService.InsertItem.UnauthorizedInsertOnRoot" xml:space="preserve">
    <value>You are not authorized to insert top level items</value>
  </data>
  <data name="MasterDataService.UpdateItem.NothingToUpdate" xml:space="preserve">
    <value>There is nothing to update for this item</value>
  </data>
  <data name="MasterDataService.UpdateItem.UnallowedUpdate" xml:space="preserve">
    <value>It is not allowed updating this item</value>
  </data>
  <data name="MasterDataService.UpdateItem.UnauthorizedUpdate" xml:space="preserve">
    <value>You are not authorized to update this item</value>
  </data>
  <data name="MasterDataService.UpdateItem.UpdateCodeWithReferences" xml:space="preserve">
    <value>This item has references and its 'Code' can not be updated</value>
  </data>
  <data name="MasterDataService.UpdateItem.UpdateIdWithReferences" xml:space="preserve">
    <value>This item has references and its 'Id' can not be updated</value>
  </data>
  <data name="MasterDataService.DeleteItem.UnallowedDelete" xml:space="preserve">
    <value>It is not allowed deleting this item</value>
  </data>
  <data name="MasterDataService.DeleteItem.UnauthorizedDelete" xml:space="preserve">
    <value>You are not authorized to delete this item</value>
  </data>
  <data name="MasterDataService.GetItem.NoResults" xml:space="preserve">
    <value>There is no item matching the criteria</value>
  </data>
  <data name="MasterDataService.DeleteItem.ItemWithReferences" xml:space="preserve">
    <value>This item has references and can not be deleted</value>
  </data>
  <data name="MasterDataService.InsertItem.MissingCode" xml:space="preserve">
    <value>The item could not be inserted. 'Code' is required</value>
  </data>
  <data name="MasterDataService.InsertItem.UnnecessaryCode" xml:space="preserve">
    <value>The item could not be inserted. 'Code' is auto-generated, should not be provided, send null</value>
  </data>
  <data name="MasterDataService.UpdateItem.UnnecessaryCode" xml:space="preserve">
    <value>The item could not be updated. 'Code' is auto-generated, should not be provided, send null</value>
  </data>
  <data name="ApiService.Paginate.NoResults" xml:space="preserve">
    <value>There are no records with the specified criteria</value>
  </data>
</root>